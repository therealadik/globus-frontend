/* tslint:disable */
/* eslint-disable */
/**
 * Financial Monitoring and Reporting API
 * API for financial monitoring and reporting
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@our-company.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TransactionCategoryStatsDto } from './TransactionCategoryStatsDto';
import {
    TransactionCategoryStatsDtoFromJSON,
    TransactionCategoryStatsDtoFromJSONTyped,
    TransactionCategoryStatsDtoToJSON,
    TransactionCategoryStatsDtoToJSONTyped,
} from './TransactionCategoryStatsDto';
import type { TransactionCountByPeriodDto } from './TransactionCountByPeriodDto';
import {
    TransactionCountByPeriodDtoFromJSON,
    TransactionCountByPeriodDtoFromJSONTyped,
    TransactionCountByPeriodDtoToJSON,
    TransactionCountByPeriodDtoToJSONTyped,
} from './TransactionCountByPeriodDto';
import type { BankTransactionStatisticsDto } from './BankTransactionStatisticsDto';
import {
    BankTransactionStatisticsDtoFromJSON,
    BankTransactionStatisticsDtoFromJSONTyped,
    BankTransactionStatisticsDtoToJSON,
    BankTransactionStatisticsDtoToJSONTyped,
} from './BankTransactionStatisticsDto';
import type { IncomeExpenseComparisonDto } from './IncomeExpenseComparisonDto';
import {
    IncomeExpenseComparisonDtoFromJSON,
    IncomeExpenseComparisonDtoFromJSONTyped,
    IncomeExpenseComparisonDtoToJSON,
    IncomeExpenseComparisonDtoToJSONTyped,
} from './IncomeExpenseComparisonDto';
import type { TransactionCountDto } from './TransactionCountDto';
import {
    TransactionCountDtoFromJSON,
    TransactionCountDtoFromJSONTyped,
    TransactionCountDtoToJSON,
    TransactionCountDtoToJSONTyped,
} from './TransactionCountDto';
import type { DebitCreditTransactionsDto } from './DebitCreditTransactionsDto';
import {
    DebitCreditTransactionsDtoFromJSON,
    DebitCreditTransactionsDtoFromJSONTyped,
    DebitCreditTransactionsDtoToJSON,
    DebitCreditTransactionsDtoToJSONTyped,
} from './DebitCreditTransactionsDto';

/**
 * 
 * @export
 * @interface TransactionFilterResponseDto
 */
export interface TransactionFilterResponseDto {
    /**
     * 
     * @type {Array<BankTransactionStatisticsDto>}
     * @memberof TransactionFilterResponseDto
     */
    bankTransactionStatistics?: Array<BankTransactionStatisticsDto>;
    /**
     * 
     * @type {DebitCreditTransactionsDto}
     * @memberof TransactionFilterResponseDto
     */
    debitCreditTransactions?: DebitCreditTransactionsDto;
    /**
     * 
     * @type {IncomeExpenseComparisonDto}
     * @memberof TransactionFilterResponseDto
     */
    incomeExpenseComparison?: IncomeExpenseComparisonDto;
    /**
     * 
     * @type {TransactionCategoryStatsDto}
     * @memberof TransactionFilterResponseDto
     */
    transactionCategoryStats?: TransactionCategoryStatsDto;
    /**
     * 
     * @type {TransactionCountByPeriodDto}
     * @memberof TransactionFilterResponseDto
     */
    transactionCountByPeriod?: TransactionCountByPeriodDto;
    /**
     * 
     * @type {TransactionCountDto}
     * @memberof TransactionFilterResponseDto
     */
    transactionCount?: TransactionCountDto;
}

/**
 * Check if a given object implements the TransactionFilterResponseDto interface.
 */
export function instanceOfTransactionFilterResponseDto(value: object): value is TransactionFilterResponseDto {
    return true;
}

export function TransactionFilterResponseDtoFromJSON(json: any): TransactionFilterResponseDto {
    return TransactionFilterResponseDtoFromJSONTyped(json, false);
}

export function TransactionFilterResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionFilterResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'bankTransactionStatistics': json['bankTransactionStatistics'] == null ? undefined : ((json['bankTransactionStatistics'] as Array<any>).map(BankTransactionStatisticsDtoFromJSON)),
        'debitCreditTransactions': json['debitCreditTransactions'] == null ? undefined : DebitCreditTransactionsDtoFromJSON(json['debitCreditTransactions']),
        'incomeExpenseComparison': json['incomeExpenseComparison'] == null ? undefined : IncomeExpenseComparisonDtoFromJSON(json['incomeExpenseComparison']),
        'transactionCategoryStats': json['transactionCategoryStats'] == null ? undefined : TransactionCategoryStatsDtoFromJSON(json['transactionCategoryStats']),
        'transactionCountByPeriod': json['transactionCountByPeriod'] == null ? undefined : TransactionCountByPeriodDtoFromJSON(json['transactionCountByPeriod']),
        'transactionCount': json['transactionCount'] == null ? undefined : TransactionCountDtoFromJSON(json['transactionCount']),
    };
}

export function TransactionFilterResponseDtoToJSON(json: any): TransactionFilterResponseDto {
    return TransactionFilterResponseDtoToJSONTyped(json, false);
}

export function TransactionFilterResponseDtoToJSONTyped(value?: TransactionFilterResponseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'bankTransactionStatistics': value['bankTransactionStatistics'] == null ? undefined : ((value['bankTransactionStatistics'] as Array<any>).map(BankTransactionStatisticsDtoToJSON)),
        'debitCreditTransactions': DebitCreditTransactionsDtoToJSON(value['debitCreditTransactions']),
        'incomeExpenseComparison': IncomeExpenseComparisonDtoToJSON(value['incomeExpenseComparison']),
        'transactionCategoryStats': TransactionCategoryStatsDtoToJSON(value['transactionCategoryStats']),
        'transactionCountByPeriod': TransactionCountByPeriodDtoToJSON(value['transactionCountByPeriod']),
        'transactionCount': TransactionCountDtoToJSON(value['transactionCount']),
    };
}

